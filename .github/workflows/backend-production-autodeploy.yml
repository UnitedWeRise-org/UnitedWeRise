name: Backend Auto-Deploy to Production

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-production-autodeploy.yml'

jobs:
  deploy-backend-production:
    runs-on: ubuntu-latest
    name: Deploy Backend to Production Environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Deploy Backend to Production
        env:
          AZURE_REGISTRY: uwracr2425
          AZURE_RESOURCE_GROUP: unitedwerise-rg
          AZURE_CONTAINER_APP: unitedwerise-backend
        run: |
          set -e

          echo "üöÄ Starting backend deployment to PRODUCTION"
          echo "‚ö†Ô∏è  WARNING: Deploying to production environment!"
          echo "Branch: main"
          echo "Commit: ${{ github.sha }}"
          echo "Timestamp: $(date)"

          # Get short commit SHA
          GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          DOCKER_TAG="backend-prod-${GIT_SHA}-$(date +%Y%m%d-%H%M%S)"

          echo "üè∑Ô∏è Docker tag: $DOCKER_TAG"

          # Build Docker image in ACR
          echo "üî® Building Docker image in Azure Container Registry..."
          az acr build --registry $AZURE_REGISTRY \
            --image "unitedwerise-backend:$DOCKER_TAG" \
            --no-wait \
            https://github.com/${{ github.repository }}.git#main:backend

          echo "‚è≥ Waiting 180 seconds for build to complete..."
          sleep 180

          # Check build status
          echo "üìä Checking build status..."
          az acr task list-runs --registry $AZURE_REGISTRY --output table | head -3

          # Get image digest
          echo "üîç Getting image digest..."
          DIGEST=$(az acr repository show --name $AZURE_REGISTRY \
            --image "unitedwerise-backend:$DOCKER_TAG" \
            --query "digest" -o tsv)

          echo "‚úÖ Image digest: $DIGEST"

          # Deploy to Container App
          echo "üöÄ Deploying to Azure Container App (PRODUCTION)..."
          az containerapp update \
            --name $AZURE_CONTAINER_APP \
            --resource-group $AZURE_RESOURCE_GROUP \
            --image "${AZURE_REGISTRY}.azurecr.io/unitedwerise-backend@$DIGEST" \
            --revision-suffix "prod-${GIT_SHA}-$(date +%H%M%S)" \
            --set-env-vars \
              NODE_ENV=production \
              RELEASE_SHA=$GIT_SHA \
              RELEASE_DIGEST=$DIGEST

          # Force single revision mode
          echo "üîß Setting single revision mode..."
          az containerapp update \
            --name $AZURE_CONTAINER_APP \
            --resource-group $AZURE_RESOURCE_GROUP \
            --revision-mode Single

          echo "‚è≥ Waiting 30 seconds for container to start..."
          sleep 30

          # Verify deployment
          echo "‚úÖ Verifying production deployment..."
          HEALTH_RESPONSE=$(curl -s "https://api.unitedwerise.org/health")
          echo "Health check response: $HEALTH_RESPONSE"

          # Check if deployed SHA matches
          DEPLOYED_SHA=$(echo $HEALTH_RESPONSE | grep -o '"releaseSha":"[^"]*"' | cut -d'"' -f4)
          echo "Expected SHA: $GIT_SHA"
          echo "Deployed SHA: $DEPLOYED_SHA"

          if [ "$DEPLOYED_SHA" = "$GIT_SHA" ]; then
            echo "‚úÖ PRODUCTION deployment successful! Backend is running correct code."
          else
            echo "‚ö†Ô∏è Warning: Deployed SHA doesn't match expected SHA"
            echo "Deployment may still be starting up..."
          fi

          echo "üéâ Production deployment complete!"
          echo "üîó Backend: https://api.unitedwerise.org"
          echo "üîó Frontend: https://www.unitedwerise.org"
